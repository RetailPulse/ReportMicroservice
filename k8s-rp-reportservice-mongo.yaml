apiVersion: v1
kind: Namespace
metadata:
  name: ns-retailpulse
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: ns-retailpulse
type: Opaque
stringData:
  MONGO_INITDB_ROOT_USERNAME: admin
  MONGO_INITDB_ROOT_PASSWORD: secret
  MONGO_INITDB_DATABASE: reportsdb
  ME_CONFIG_BASICAUTH_USERNAME: webuser
  ME_CONFIG_BASICAUTH_PASSWORD: webpass
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: ns-retailpulse
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 5Gi
  # storageClassName: standard   # uncomment/set to your cluster's class if needed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: ns-retailpulse
spec:
  replicas: 1
  selector:
    matchLabels: { app: mongo }
  template:
    metadata:
      labels: { app: mongo }
    spec:
      containers:
        - name: mongo
          image: mongo:7
          args: [ "--bind_ip_all", "--auth" ]
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom: { secretKeyRef: { name: mongo-secret, key: MONGO_INITDB_ROOT_USERNAME } }
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom: { secretKeyRef: { name: mongo-secret, key: MONGO_INITDB_ROOT_PASSWORD } }
            - name: MONGO_INITDB_DATABASE
              valueFrom: { secretKeyRef: { name: mongo-secret, key: MONGO_INITDB_DATABASE } }
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 30
            periodSeconds: 20
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: ns-retailpulse
spec:
  selector: { app: mongo }
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
  type: ClusterIP